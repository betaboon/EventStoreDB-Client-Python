name: Tests

on:
  - pull_request

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v2
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: __pypackages__
          key: commit-lint-${{ hashFiles('pdm.lock') }}
      - name: Install dependencies
        run: pdm sync -d
      - name: Run commit-lint
        env:
          FROM_REF: origin/${{ github.base_ref }}
          TO_REF: origin/${{ github.head_ref }}
        run: pdm ci-commit-lint

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v2
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            __pypackages__
            ~/.cache/pre-commit
          key: lint-${{ hashFiles('pdm.lock', '.pre-commit-config.yaml') }}
      - name: Install dependencies
        run: |
          pdm sync -d
          pdm install-git-hooks
      - name: Run lint
        env:
          FROM_REF: origin/${{ github.base_ref }}
          TO_REF: origin/${{ github.head_ref }}
        run: pdm ci-lint

  test:
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: __pypackages__
          key: test-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pdm.lock') }}
      - name: Install dependencies
        run: pdm sync -G :all
      - name: Run tests
        run: pdm test

  testall:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check test matrix status
        if: ${{ needs.test.result != 'success' }}
        run: exit 1
