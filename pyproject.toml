[project]
license = {text = "Apache-2.0"}
authors = [
    {name = "betaboon", email = "betaboon@0x80.ninja"},
]
name = "eventstoredb"
description = "Python EventstoreDB client that uses gRPBC as the communication protocol."
readme = "README.md"
keywords = ["eventstore", "eventstoredb"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
requires-python = ">=3.9"
dependencies = [
    "betterproto==2.0.0b5",
    "yarl>=1.8.2",
]

[project.urls]
repository = "https://github.com/betaboon/EventStoreDB-Client-Python"
changelog = "https://github.com/betaboon/EventStoreDB-Client-Python/releases"

[project.optional-dependencies]
[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.2.2",
    "pytest-docker>=1.0.1",
    "pytest-asyncio>=0.20.3",
    "pytest-mock>=3.10.0",
]
dev = [
    "grpcio-tools>=1.51.3",
    "betterproto[compiler]==2.0.0b5",
    "pre-commit>=3.1.1",
    "gitlint>=0.19.1",
    "python-semantic-release>=7.33.2",
]

[tool.pdm.scripts]
install-git-hooks = "pre-commit install --install-hooks"
lint = "pre-commit run --all-files"
test = "pytest"

[tool.pdm.scripts._.env]
EVENTSTOREDB_VERSION = "oss-v21.10.8"
PROTOC_IN_PATH = "./external/EventStore/src/Protos/Grpc"
PROTOC_OUT_PATH = "./eventstoredb/generated"

[tool.pdm.scripts.protobuf-generate]
shell = """
  mkdir -p ${PROTOC_OUT_PATH} &&
  python -m grpc_tools.protoc \
    --proto_path=${PROTOC_IN_PATH} \
    --python_betterproto_out=${PROTOC_OUT_PATH} \
    ${PROTOC_IN_PATH}/*.proto
"""

[tool.pdm.scripts.protobuf-update]
shell = """
[ -z "$EVENTSTOREDB_VERSION" ] && echo "env EVENTSTOREDB_VERSION not set" || \
(
  cd ${PROTOC_IN_PATH} && \
  git fetch --depth 1 origin ${EVENTSTOREDB_VERSION} && \
  git checkout FETCH_HEAD
)
"""

[tool.pdm.scripts.ci-lint]
cmd = [
  "pre-commit", "run",
  "--show-diff-on-failure",
  "--from-ref", "$FROM_REF",
  "--to-ref", "$TO_REF",
]

[tool.pdm.scripts.ci-commit-lint]
cmd = [
  "gitlint",
  "--contrib", "contrib-title-conventional-commits",
  "--ignore", "body-is-missing",
  "--commits", "$FROM_REF..$TO_REF",
]

[tool.pdm.scripts.ci-version]
cmd = "semantic-release print-version --next"

[tool.pdm.scripts.ci-changelog]
cmd = "semantic-release changelog --unreleased"

[tool.pdm.version]
source = "scm"
write_to = "eventstoredb/__version__.py"
write_template = "__version__ = '{}'"

[tool.semantic_release]
branch = "main"
version_source = "tag_only"
version_pattern = "d+.d+.d+"
tag_format = "{version}"

[tool.black]
line-length = 88

[tool.flake8]
# Recommend matching the black line length (default 88),
# rather than using the flake8 default of 79:
max-line-length = 88
extend-ignore = [
    # See https://github.com/PyCQA/pycodestyle/issues/373
    "E203",
]
per-file-ignores = [
  # imported but unused
  "__init__.py:F401",
]
exclude = [
  "eventstoredb/generated/*",
  "__pypackages__",
  "build",
  "dist",
]

[tool.isort]
profile = "black"
atomic = true
filter_files = true

[tool.pytest.ini_options]
addopts = "-ra --ignore=__pypackages__ --asyncio-mode=auto"

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"
